--SELECT LOWER(FIRST_NAME) FROM EMPLOYEES
--SELECT INITCAP(LAST_NAME) AS FNAME FROM employees
--SELECT LOWER(FIRST_NAME)||' '||LOWER(LAST_NAME) AS NAME, SALARY FROM EMPLOYEES WHERE SALARY>10000;
--SELECT CONCAT(LOWER(FIRST_NAME),LOWER(LAST_NAME)) AS NAME, SALARY FROM EMPLOYEES WHERE SALARY>10000;
--SELECT LENGTH('SHASHANK')FROM DUAL
--SELECT SUBSTR('SHASHANK',3,6) FROM DUAL --******** FROM 3rd position extract 6 characterSE
--SELECT INSTR('SHASHANK','A') FROM DUAL
--SELECT TRIM( LEADING 'S' FROM 'SHASHANK') FROM DUAL
--SELECT TRIM( 'S' FROM 'SHASHANK') FROM DUAL
--SELECT TRIM( TRAILING 'K' FROM 'SHASHANK') FROM DUAL
--SELECT LPAD('SHASHANK', 20,'TIPLE') FROM DUAL
--SELECT RPAD('SHASHANK', 12,'TIPLE') FROM DUAL
--SELECT LPAD(FIRST_NAME, 10,'----') FROM EMPLOYEES
--SELECT REPLACE('HelloWorld','llo', '--') FROM DUAL;
--SELECT ROUND(92.528,2)FROM DUAL --****** ROUNDS UP THE FIGURE
--SELECT TRUNC(92.23,89)FROM DUAL
--SELECT MOD(15,2)FROM DUAL

--SELECT NVL(MANAGER_ID,0) AS MANAG_ID FROM EMPLOYEES; -- converts null to actual value
--SELECT NVL(EMAIL,'Unavailable') FROM EMPLOYEES; -- datatype must be same
--SELECT NVL2(MANAGER_ID,55,0) AS MANAG_ID FROM EMPLOYEES ---*** IF NULL REPLACE WITH 0 OR IF NOT REPLACE IT WITH 55

--SELECT TRUNC(MONTHS_BETWEEN(TO_DATE('12-31-1990','MM-DD-YYYY'), TO_DATE('01-01-1990','MM-DD-YYYY'))) AS DATES FROM EMPLOYEES
--SELECT ADD_MONTHS('24-MAR-2020',5)FROM DUAL
--SELECT NEXT_DAY('14-FEB-2023','FRIDAY')FROM DUAL
--SELECT first_name "Name",TO_CHAR(HIRE_DATE,'MM-YYYY')"Hire Date" FROM EMPLOYEES;
--TO_NUMBER
--TO_DATE
--select employee_id, first_name, last_name, To_CHAR(hire_date,'yyyy') as hire_date FROM employees;

SELECT  first_name, salary,
(CASE 
    WHEN salary>15000 THEN salary*2
    WHEN salary<5000 THEN salary*10
    ELSE salary
END )"new salary"
   FROM employees;

-----------------------
--SELECT COUNT(*) FROM EMPLOYEES
--SELECT COUNT(MANAGER_ID) FROM EMPLOYEES
--SELECT MIN(MANAGER_ID) FROM EMPLOYEES
--SELECT MAX(MANAGER_ID) FROM EMPLOYEES
--ELECT SUM(MANAGER_ID) FROM EMPLOYEES
--SELECT AVG(MANAGER_ID) FROM EMPLOYEES

------------------------CLAUSES
--SELECT * FROM EMPLOYEES ORDER BY EMPLOYEE_ID DESCS
--SELECT MANAGER_ID, MIN(SALARY) FROM EMPLOYEES GROUP BY MANAGER_ID




---------GROUP BY(COUNT,MAX,MIN,SUM,AVG)------------(WHERE --> GROUP BY-->HAVING--> ORDER BY)--------------------
---------WHERE could not be used with these (COUNT,MAX,MIN,SUM,AVG)functions so use HAVING instead-------
-----EXAMPLES------
--SELECT AGE, MAX(MARKS) FROM STUDENTS WHERE MARKS=21 GROUP BY AGE;
--SELECT first_name, MAX(salary) FROM employees HAVING MAX(salary)>85 GROUP BY first_name;
--SELECT AGE, MAX(MARKS) FROM STUDENTS WHERE AGE>19 GROUP BY AGE HAVING MAX(MARKS)>85 ORDER BY AGE; 

------------------------*****************----------------------------------------




